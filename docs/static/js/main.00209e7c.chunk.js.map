{"version":3,"sources":["util.ts","view/home/itemBar.tsx","view/home/style.less","view lazy /^/.//.*$/ groupOptions: {} namespace object","App.tsx","serviceWorker.ts","index.tsx","view/home/index.tsx","view/home/header.tsx"],"names":["history","_push","push","_replace","replace","one","_","isPlainObject","apply","this","arguments","o","Object","assign","query","search","queryString","stringify","processHistory","createHashHistory","ItemBar","_ref","info","index","_useState","useState","localStorage","showCtrl","JSON","parse","_useState2","slicedToArray","isShow","setShow","react_default","a","createElement","className","onClick","event","state","iconDom","currentTarget","children","item","ctrlJSON","animDeg","style","transform","title","classnames","icon-rotate","childs","map","key","concat","routeName","text","module","exports","__webpack_require__","p","./flex","./flex/","./flex/index","./flex/index.tsx","./home","./home/","./home/header","./home/header.tsx","./home/index","./home/index.tsx","./home/itemBar","./home/itemBar.tsx","./home/style.less","webpackAsyncContext","req","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","components","App","react_router_dom","react_router","exact","path","component","Loadable","Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_header__WEBPACK_IMPORTED_MODULE_1__","_itemBar__WEBPACK_IMPORTED_MODULE_2__","compList","useEffect","ctrlArr","repeat","length","split","el","Header"],"mappings":"sLAuCA,IAAMA,EAnCN,SAAwBA,GACtB,IAAMC,EAAQD,EAAQE,KAChBC,EAAWH,EAAQI,QA8BzB,OA5BAJ,EAAQE,KAAO,SAAUG,GACvB,IAAKC,IAAEC,cAAcF,GACnB,OAAOJ,EAAMO,MAAMC,KAAMC,WAG3B,IAAMC,EAAIC,OAAOC,OAAO,GAAIR,GAExBM,EAAEG,QACJH,EAAEI,OAASC,IAAYC,UAAUN,EAAEG,QAGrCb,EAAMO,MAAMC,KAAM,CAACE,KAGrBX,EAAQI,QAAU,SAAUC,GAC1B,IAAKC,IAAEC,cAAcF,GACnB,OAAOF,EAASK,MAAMC,KAAMC,WAG9B,IAAMC,EAAIC,OAAOC,OAAO,GAAIR,GAExBM,EAAEG,QACJH,EAAEI,OAASC,IAAYC,UAAUN,EAAEG,QAGrCX,EAASK,MAAMC,KAAM,CAACE,KAGjBX,EAGOkB,CAAeC,eCkBhBC,UA3Cf,SAAAC,GAAgD,IAA7BC,EAA6BD,EAA7BC,KAAMC,EAAuBF,EAAvBE,MAAuBC,EACpBC,mBACxBC,aAAaC,UAAYC,KAAKC,MAAMH,aAAaC,UAAUJ,IAFfO,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAY,EAAA,GACvCQ,EADuCF,EAAA,GAC/BG,EAD+BH,EAAA,GAiB9C,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,QAdL,SAACC,GACrB,IAAMC,GAASR,EACTS,EAAUF,EAAMG,cAAcC,SAASC,KAAK,GAC5CC,EAAWjB,KAAKC,MAAMH,aAAaC,UACrCmB,EAAU,EACdb,EAAQO,GACJA,IAAOM,EAAU,KACrBL,EAAQM,MAAMC,UAAY,qBAAuBF,EAAU,OAC3DD,EAAStB,GAASiB,EAClBd,aAAaC,SAAWC,KAAKX,UAAU4B,KAMnCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQf,EAAK2B,OAC5Bf,EAAAC,EAAAC,cAAA,KACEC,UAAWa,IAAW,+BAAgC,CACpDC,eAA0B,IAAXnB,OAIpBA,EACCE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXf,EAAK8B,OAAOC,IAAI,SAACT,EAAMrB,GACtB,OACEW,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYiB,IAAK/B,EAAOe,QAAS,kBAAMtC,EAAQE,KAAR,IAAAqD,OAAiBX,EAAKY,cACzEtB,EAAAC,EAAAC,cAAA,YAAOQ,EAAKa,MACZvB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAb,cAKN,2BCpDVqB,EAAAC,QAAiBC,EAAAC,EAAuB,2FCAxC,IAAAR,EAAA,CACAS,SAAA,CACA,GACA,EACA,GAEAC,UAAA,CACA,GACA,EACA,GAEAC,eAAA,CACA,GACA,EACA,GAEAC,mBAAA,CACA,GACA,EACA,GAEAC,SAAA,CACA,EACA,GAEAC,UAAA,CACA,EACA,GAEAC,gBAAA,CACA,EACA,GAEAC,oBAAA,CACA,EACA,GAEAC,eAAA,CACA,EACA,GAEAC,mBAAA,CACA,EACA,GAEAC,iBAAA,CACA,GACA,GAEAC,qBAAA,CACA,GACA,GAEAC,oBAAA,CACA,GACA,IAGA,SAAAC,EAAAC,GACA,IAAAhB,EAAAjD,EAAA0C,EAAAuB,GACA,OAAAC,QAAAC,UAAAC,KAAA,WACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,IAIA,IAAAG,EAAA9B,EAAAuB,GAAAQ,EAAAD,EAAA,GACA,OAAAN,QAAAQ,IAAAF,EAAAG,MAAA,GAAAjC,IAAAO,EAAAoB,IAAAD,KAAA,WACA,OAAAnB,EAAA2B,EAAAH,EAAAD,EAAA,MAGAR,EAAAa,KAAA,WACA,OAAA5E,OAAA4E,KAAAnC,IAEAsB,EAAAS,GAAA,GACA1B,EAAAC,QAAAgB,uJCvEMc,EAAuB,CAAC,QAsBfC,MApBf,WACE,OACExD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACEzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,KACGH,EAAWpC,IAAI,SAACT,EAAMrB,GACrB,OACEW,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CACEtC,IAAK/B,EACLsE,OAAK,EACLC,KAAI,IAAAvC,OAAMX,GACVmD,UAAWC,YAAS,kBAAMpC,EAAA,GAAAA,CAAO,KAAAL,OAAUX,UAIjDV,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAOE,KAAK,IAAIC,UAAWE,eCT7BC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA8CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACT1B,KAAK,SAAA+B,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxE,QACfmE,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,iHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,iBChGjEC,IAASC,OAAOzF,EAAAC,EAAAC,cAACwF,EAAD,MAASC,SAASC,eAAe,SDmB1C,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIoB,IACnBC,IACD5B,OAAOC,SAAS4B,MAEJC,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,OAAQ,WAC9B,IAAM1B,EAAK,GAAAlD,OAAMyE,IAAN,sBAEP9B,GAgEV,SAAiCO,EAAeC,GAE9C0B,MAAM3B,GACH1B,KAAK,SAAAsD,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM5D,KAAK,SAAA+B,GACjCA,EAAa8B,aAAa7D,KAAK,WAC7BqB,OAAOC,SAASwC,aAKpBrC,EAAgBC,EAAOC,KAG1Bc,MAAM,WACLJ,QAAQC,IACN,mEArFAyB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM5D,KAAK,WACjCqC,QAAQC,IACN,gHAMJb,EAAgBC,EAAOC,MC7C/BE,mCCbAhD,EAAAmF,EAAAC,GAAA,IAAAC,EAAArF,EAAA,GAAAsF,EAAAtF,EAAAuF,EAAAF,GAAAG,EAAAxF,EAAA,GAAAyF,EAAAzF,EAAA,IAMM0F,GANN1F,EAAA,IAMwB,CACtB,CACEX,MAAO,SACPG,OAAQ,CACN,CACEK,KAAM,OACND,UAAW,YA6BJyC,UAvBQ,WASrB,OARAsD,oBAAU,WACR,QAA8B,IAA1B7H,aAAaC,SAAqB,CACpC,IAAM6H,EAAU,IAAIC,OAAOH,EAASI,QAAQC,MAAM,IAAItG,IAAI,SAAUuG,EAAIrI,GACtE,UAAWqI,IAEblI,aAAaC,SAAWC,KAAKX,UAAUuI,KAExC,IAEDN,EAAA/G,EAAAC,cAAA,OAAKC,UAAU,aACb6G,EAAA/G,EAAAC,cAACgH,EAAA,QAAD,MACAF,EAAA/G,EAAAC,cAAA,OAAKC,UAAU,yBACb6G,EAAA/G,EAAAC,cAAA,OAAKC,UAAU,mBACZiH,EAASjG,IAAI,SAACT,EAAMrB,GACnB,OAAO2H,EAAA/G,EAAAC,cAACiH,EAAA,QAAD,CAAS/F,IAAK/B,EAAOD,KAAMsB,EAAMrB,MAAOA,0CCjC3DqC,EAAAmF,EAAAC,GAAA,IAAAC,EAAArF,EAAA,GAAAsF,EAAAtF,EAAAuF,EAAAF,GAUeY,UARU,WACvB,OACEX,EAAA/G,EAAAC,cAAA,UAAQC,UAAU,mBAChB6G,EAAA/G,EAAAC,cAAA,MAAIC,UAAU,SAAd","file":"static/js/main.00209e7c.chunk.js","sourcesContent":["import { createHashHistory } from 'history'\nimport _ from 'lodash'\nimport queryString from 'query-string'\n\nfunction processHistory(history: any) {\n  const _push = history.push\n  const _replace = history.replace\n\n  history.push = function (one: any) {\n    if (!_.isPlainObject(one)) {\n      return _push.apply(this, arguments)\n    }\n\n    const o = Object.assign({}, one)\n\n    if (o.query) {\n      o.search = queryString.stringify(o.query)\n    }\n\n    _push.apply(this, [o])\n  }\n\n  history.replace = function (one: any) {\n    if (!_.isPlainObject(one)) {\n      return _replace.apply(this, arguments)\n    }\n\n    const o = Object.assign({}, one)\n\n    if (o.query) {\n      o.search = queryString.stringify(o.query)\n    }\n\n    _replace.apply(this, [o])\n  }\n\n  return history\n}\n\nconst history = processHistory(createHashHistory())\n\nexport {\n  history\n}","import React, { useState } from \"react\";\nimport classnames from \"classnames\";\n\nimport { history } from \"../../util\";\n\ninterface ItemBarProps {\n  children?: React.ReactNode;\n  info: {\n    title: string;\n    childs: any[];\n  };\n  index: number;\n}\n\nfunction ItemBar({ info, index }: ItemBarProps) {\n  const [isShow, setShow] = useState(\n    localStorage.showCtrl && JSON.parse(localStorage.showCtrl)[index]\n  );\n\n  const handleSetShow = (event: any) => {\n    const state = !isShow;\n    const iconDom = event.currentTarget.children.item(1);\n    const ctrlJSON = JSON.parse(localStorage.showCtrl);\n    let animDeg = 0;\n    setShow(state);\n    if (state) animDeg = 180;\n    iconDom.style.transform = \"rotate3d(0, 0, 1, \" + animDeg + \"deg)\";\n    ctrlJSON[index] = state;\n    localStorage.showCtrl = JSON.stringify(ctrlJSON);\n  };\n\n  return (\n    <div className=\"item-wrapper\">\n      <div className=\"title\" onClick={handleSetShow}>\n        <div className=\"text\">{info.title}</div>\n        <i\n          className={classnames(\"icon iconfont iconjiantouxia\", {\n            \"icon-rotate\": isShow === true,\n          })}\n        />\n      </div>\n      {isShow ? (\n        <ul className=\"comp-list\">\n          {info.childs.map((item, index) => {\n            return (\n              <li className=\"comp-item\" key={index} onClick={() => history.push(`/${item.routeName}`)}>\n                <span>{item.text}</span>\n                <i className=\"iconfont\">&#xe646;</i>\n              </li>\n            );\n          })}\n        </ul>\n      ) : null}\n    </div>\n  );\n}\n\nexport default ItemBar;\n","module.exports = __webpack_public_path__ + \"static/media/style.572c7e0e.less\";","var map = {\n\t\"./flex\": [\n\t\t12,\n\t\t9,\n\t\t0\n\t],\n\t\"./flex/\": [\n\t\t12,\n\t\t9,\n\t\t0\n\t],\n\t\"./flex/index\": [\n\t\t12,\n\t\t9,\n\t\t0\n\t],\n\t\"./flex/index.tsx\": [\n\t\t12,\n\t\t9,\n\t\t0\n\t],\n\t\"./home\": [\n\t\t7,\n\t\t9\n\t],\n\t\"./home/\": [\n\t\t7,\n\t\t9\n\t],\n\t\"./home/header\": [\n\t\t9,\n\t\t9\n\t],\n\t\"./home/header.tsx\": [\n\t\t9,\n\t\t9\n\t],\n\t\"./home/index\": [\n\t\t7,\n\t\t9\n\t],\n\t\"./home/index.tsx\": [\n\t\t7,\n\t\t9\n\t],\n\t\"./home/itemBar\": [\n\t\t10,\n\t\t9\n\t],\n\t\"./home/itemBar.tsx\": [\n\t\t10,\n\t\t9\n\t],\n\t\"./home/style.less\": [\n\t\t21,\n\t\t7\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 49;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Loadable from '@loadable/component'; \nimport Home from \"./view/home\";\n\nconst components: string[] = [\"flex\"];\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        {components.map((item, index) => {\n          return (\n            <Route\n              key={index}\n              exact\n              path={`/${item}`}\n              component={Loadable(() => import(`./view/${item}`))}\n            />\n          );\n        })}\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/css/common.css'\nimport './assets/css/iconfont.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, { useEffect } from \"react\";\nimport Header from \"./header\";\nimport ItemBar from \"./itemBar\";\n\nimport './style.less'\n\nconst compList: any[] = [\n  {\n    title: \"Common\",\n    childs: [\n      {\n        text: \"Flex\",\n        routeName: \"flex\",\n      },\n    ],\n  },\n];\n\nconst Home: React.FC = () => {\n  useEffect(() => {\n    if (localStorage.showCtrl === void 0) {\n      const ctrlArr = '0'.repeat(compList.length).split('').map(function (el, index) {\n        return !!~~el\n      })\n      localStorage.showCtrl = JSON.stringify(ctrlArr)\n    }\n  }, [])\n  return (\n    <div className=\"home-page\">\n      <Header />\n      <div className=\"clearfix home-wrapper\">\n        <div className=\"content-wrapper\">\n          {compList.map((item, index) => {\n            return <ItemBar key={index} info={item} index={index} />;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"header clearfix\">\n      <h1 className=\"title\">Ink Components</h1>\n    </header>\n  );\n};\n\nexport default Header;\n"],"sourceRoot":""}